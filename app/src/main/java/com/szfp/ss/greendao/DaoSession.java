package com.szfp.ss.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.szfp.ss.domain.ParkingRecordReportBean;
import com.szfp.ss.domain.UserInformation;
import com.szfp.ss.domain.model.ConsumptionBean;
import com.szfp.ss.domain.model.MemberBean;
import com.szfp.ss.domain.model.ParkingRecordBean;
import com.szfp.ss.domain.model.RechargeBean;
import com.szfp.ss.domain.result.RechargeRecordBean;

import com.szfp.ss.greendao.ParkingRecordReportBeanDao;
import com.szfp.ss.greendao.UserInformationDao;
import com.szfp.ss.greendao.ConsumptionBeanDao;
import com.szfp.ss.greendao.MemberBeanDao;
import com.szfp.ss.greendao.ParkingRecordBeanDao;
import com.szfp.ss.greendao.RechargeBeanDao;
import com.szfp.ss.greendao.RechargeRecordBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig parkingRecordReportBeanDaoConfig;
    private final DaoConfig userInformationDaoConfig;
    private final DaoConfig consumptionBeanDaoConfig;
    private final DaoConfig memberBeanDaoConfig;
    private final DaoConfig parkingRecordBeanDaoConfig;
    private final DaoConfig rechargeBeanDaoConfig;
    private final DaoConfig rechargeRecordBeanDaoConfig;

    private final ParkingRecordReportBeanDao parkingRecordReportBeanDao;
    private final UserInformationDao userInformationDao;
    private final ConsumptionBeanDao consumptionBeanDao;
    private final MemberBeanDao memberBeanDao;
    private final ParkingRecordBeanDao parkingRecordBeanDao;
    private final RechargeBeanDao rechargeBeanDao;
    private final RechargeRecordBeanDao rechargeRecordBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        parkingRecordReportBeanDaoConfig = daoConfigMap.get(ParkingRecordReportBeanDao.class).clone();
        parkingRecordReportBeanDaoConfig.initIdentityScope(type);

        userInformationDaoConfig = daoConfigMap.get(UserInformationDao.class).clone();
        userInformationDaoConfig.initIdentityScope(type);

        consumptionBeanDaoConfig = daoConfigMap.get(ConsumptionBeanDao.class).clone();
        consumptionBeanDaoConfig.initIdentityScope(type);

        memberBeanDaoConfig = daoConfigMap.get(MemberBeanDao.class).clone();
        memberBeanDaoConfig.initIdentityScope(type);

        parkingRecordBeanDaoConfig = daoConfigMap.get(ParkingRecordBeanDao.class).clone();
        parkingRecordBeanDaoConfig.initIdentityScope(type);

        rechargeBeanDaoConfig = daoConfigMap.get(RechargeBeanDao.class).clone();
        rechargeBeanDaoConfig.initIdentityScope(type);

        rechargeRecordBeanDaoConfig = daoConfigMap.get(RechargeRecordBeanDao.class).clone();
        rechargeRecordBeanDaoConfig.initIdentityScope(type);

        parkingRecordReportBeanDao = new ParkingRecordReportBeanDao(parkingRecordReportBeanDaoConfig, this);
        userInformationDao = new UserInformationDao(userInformationDaoConfig, this);
        consumptionBeanDao = new ConsumptionBeanDao(consumptionBeanDaoConfig, this);
        memberBeanDao = new MemberBeanDao(memberBeanDaoConfig, this);
        parkingRecordBeanDao = new ParkingRecordBeanDao(parkingRecordBeanDaoConfig, this);
        rechargeBeanDao = new RechargeBeanDao(rechargeBeanDaoConfig, this);
        rechargeRecordBeanDao = new RechargeRecordBeanDao(rechargeRecordBeanDaoConfig, this);

        registerDao(ParkingRecordReportBean.class, parkingRecordReportBeanDao);
        registerDao(UserInformation.class, userInformationDao);
        registerDao(ConsumptionBean.class, consumptionBeanDao);
        registerDao(MemberBean.class, memberBeanDao);
        registerDao(ParkingRecordBean.class, parkingRecordBeanDao);
        registerDao(RechargeBean.class, rechargeBeanDao);
        registerDao(RechargeRecordBean.class, rechargeRecordBeanDao);
    }
    
    public void clear() {
        parkingRecordReportBeanDaoConfig.clearIdentityScope();
        userInformationDaoConfig.clearIdentityScope();
        consumptionBeanDaoConfig.clearIdentityScope();
        memberBeanDaoConfig.clearIdentityScope();
        parkingRecordBeanDaoConfig.clearIdentityScope();
        rechargeBeanDaoConfig.clearIdentityScope();
        rechargeRecordBeanDaoConfig.clearIdentityScope();
    }

    public ParkingRecordReportBeanDao getParkingRecordReportBeanDao() {
        return parkingRecordReportBeanDao;
    }

    public UserInformationDao getUserInformationDao() {
        return userInformationDao;
    }

    public ConsumptionBeanDao getConsumptionBeanDao() {
        return consumptionBeanDao;
    }

    public MemberBeanDao getMemberBeanDao() {
        return memberBeanDao;
    }

    public ParkingRecordBeanDao getParkingRecordBeanDao() {
        return parkingRecordBeanDao;
    }

    public RechargeBeanDao getRechargeBeanDao() {
        return rechargeBeanDao;
    }

    public RechargeRecordBeanDao getRechargeRecordBeanDao() {
        return rechargeRecordBeanDao;
    }

}
