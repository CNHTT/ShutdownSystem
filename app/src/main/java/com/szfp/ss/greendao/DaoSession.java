package com.szfp.ss.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.szfp.ss.domain.RechargeRecordBean;
import com.szfp.ss.domain.UserInformation;

import com.szfp.ss.greendao.RechargeRecordBeanDao;
import com.szfp.ss.greendao.UserInformationDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig rechargeRecordBeanDaoConfig;
    private final DaoConfig userInformationDaoConfig;

    private final RechargeRecordBeanDao rechargeRecordBeanDao;
    private final UserInformationDao userInformationDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        rechargeRecordBeanDaoConfig = daoConfigMap.get(RechargeRecordBeanDao.class).clone();
        rechargeRecordBeanDaoConfig.initIdentityScope(type);

        userInformationDaoConfig = daoConfigMap.get(UserInformationDao.class).clone();
        userInformationDaoConfig.initIdentityScope(type);

        rechargeRecordBeanDao = new RechargeRecordBeanDao(rechargeRecordBeanDaoConfig, this);
        userInformationDao = new UserInformationDao(userInformationDaoConfig, this);

        registerDao(RechargeRecordBean.class, rechargeRecordBeanDao);
        registerDao(UserInformation.class, userInformationDao);
    }
    
    public void clear() {
        rechargeRecordBeanDaoConfig.clearIdentityScope();
        userInformationDaoConfig.clearIdentityScope();
    }

    public RechargeRecordBeanDao getRechargeRecordBeanDao() {
        return rechargeRecordBeanDao;
    }

    public UserInformationDao getUserInformationDao() {
        return userInformationDao;
    }

}
